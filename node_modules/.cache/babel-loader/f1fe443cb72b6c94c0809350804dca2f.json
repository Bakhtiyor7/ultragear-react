{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards(_ref) {\n  var swiper = _ref.swiper,\n    extendParams = _ref.extendParams,\n    on = _ref.on;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n      activeIndex = swiper.activeIndex;\n    var params = swiper.params.cardsEffect;\n    var _swiper$touchEventsDa = swiper.touchEventsData,\n      startTranslate = _swiper$touchEventsDa.startTranslate,\n      isTouched = _swiper$touchEventsDa.isTouched;\n    var currentTranslate = swiper.translate;\n    for (var i = 0; i < slides.length; i += 1) {\n      var $slideEl = slides.eq(i);\n      var slideProgress = $slideEl[0].progress;\n      var progress = Math.min(Math.max(slideProgress, -4), 4);\n      var offset = $slideEl[0].swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(\"translateX(\".concat(swiper.minTranslate(), \"px)\"));\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      var tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      var tY = 0;\n      var tZ = -100 * Math.abs(progress);\n      var scale = 1;\n      var rotate = -2 * progress;\n      var tXAdd = 8 - Math.abs(progress) * 0.75;\n      var isSwipeToNext = (i === activeIndex || i === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      var isSwipeToPrev = (i === activeIndex || i === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n      }\n      if (progress < 0) {\n        // next\n        tX = \"calc(\".concat(tX, \"px + (\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else if (progress > 0) {\n        // prev\n        tX = \"calc(\".concat(tX, \"px + (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else {\n        tX = \"\".concat(tX, \"px\");\n      }\n      if (!swiper.isHorizontal()) {\n        var prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      var scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n      var transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(rotate, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n      if (params.slideShadows) {\n        // Set shadows\n        var $shadowEl = $slideEl.find('.swiper-slide-shadow');\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      var $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n  var setTransition = function setTransition(duration) {\n    var transformEl = swiper.params.cardsEffect.transformEl;\n    var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformEl: transformEl\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: function perspective() {\n      return true;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}","map":{"version":3,"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","EffectCards","swiper","extendParams","on","cardsEffect","slideShadows","transformEl","setTranslate","slides","activeIndex","params","touchEventsData","startTranslate","isTouched","currentTranslate","translate","i","length","$slideEl","eq","slideProgress","progress","Math","min","max","offset","swiperSlideOffset","centeredSlides","cssMode","$wrapperEl","transform","minTranslate","tX","tY","tZ","abs","scale","rotate","tXAdd","isSwipeToNext","isSwipeToPrev","subProgress","isHorizontal","prevY","scaleString","$shadowEl","find","style","opacity","zIndex","round","$targetEl","setTransition","duration","$transitionElements","transition","effect","perspective","overwriteParams","watchSlidesProgress","virtualTranslate"],"sources":["/Users/baxtiyoraxatov/Desktop/Desktop/ultragear-react/node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -2 * progress;\n      let tXAdd = 8 - Math.abs(progress) * 0.75;\n      const isSwipeToNext = (i === activeIndex || i === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (i === activeIndex || i === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${rotate}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}